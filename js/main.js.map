{"version":3,"sources":["../../../node_modules/almond/almond.js","../config.js","eventEmitter/EventEmitter.js","lagden-utils/dist/index.js","../components/modal.js","../app/core.js","../main.js"],"names":["requirejs","require","define","undef","main","req","makeMap","handlers","defined","waiting","config","defining","hasOwn","Object","prototype","hasOwnProperty","aps","slice","jsSuffixRegExp","hasProp","obj","prop","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","normalizedBaseParts","baseParts","split","map","starMap","length","nodeIdCompat","test","replace","charAt","concat","splice","join","makeRequire","relName","forceSync","args","arguments","push","apply","makeNormalize","makeLoad","depName","value","callDep","Error","splitPrefix","prefix","index","indexOf","substring","plugin","parts","f","n","pr","p","makeConfig","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","baseUrl","paths","app","templates","components","EventEmitter","proto","this","originalGlobalValue","indexOfListener","listeners","listener","alias","getListeners","evt","response","key","events","_getEvents","RegExp","flattenListeners","flatListeners","getListenersAsObject","Array","addListener","listenerIsWrapped","once","on","addOnceListener","defineEvent","defineEvents","evts","removeListener","off","addListeners","manipulateListeners","removeListeners","remove","single","multiple","removeEvent","type","_events","removeAllListeners","emitEvent","listenersMap","_getOnceReturnValue","trigger","emit","setOnceReturnValue","_onceReturnValue","noConflict","global","factory","lagdenUtils","detect","lista","document","documentElement","style","animationEvent","VENDOR","escapeHtml","html","String","extend","a","b","keys","forEach","isElement","HTMLElement","SVGElement","qS","el","querySelector","textNode","node","txt","stringHTML","insertAdjacentHTML","appendChild","createTextNode","transitionEvent","defineProperty","child","parent","ctor","constructor","__super__","window","ModalLayout","GUID","Modal","doc","docBody","head","getElementsByTagName","body","superClass","content","opts","contentIsStr","r","render","esc","beforeOpen","escape","box","template","keyCodes","addEventListener","modalOpen","_style","css","styl","createElement","styleSheet","cssText","_toogle","m","classList","onKeyUp","event","keyCode","close","isOpen","contains","open","focus","destroy","removeChild","removeEventListener","handleEvent","btnDestroy","btnOpen","closeModal","destroyModal","modal","modalContent","openModal","bind","instance"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * @license almond 0.3.2 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/almond/LICENSE\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part, normalizedBaseParts,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name) {\n            name = name.split('/');\n            lastIndex = name.length - 1;\n\n            // If wanting node ID compatibility, strip .js from end\n            // of IDs. Have to do this here, and not in nameToUrl\n            // because node allows either .js or non .js to map\n            // to same file.\n            if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n            }\n\n            // Starts with a '.' so need the baseName\n            if (name[0].charAt(0) === '.' && baseParts) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that 'directory' and not name of the baseName's\n                //module. For instance, baseName of 'one/two/three', maps to\n                //'one/two/three.js', but we want the directory, 'one/two' for\n                //this normalization.\n                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                name = normalizedBaseParts.concat(name);\n            }\n\n            //start trimDots\n            for (i = 0; i < name.length; i++) {\n                part = name[i];\n                if (part === '.') {\n                    name.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    // If at the start, or previous value is still ..,\n                    // keep them so that when converted to a path it may\n                    // still work when converted to a path, even though\n                    // as an ID it is less than ideal. In larger point\n                    // releases, may be better to just kick out an error.\n                    if (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {\n                        continue;\n                    } else if (i > 0) {\n                        name.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n            //end trimDots\n\n            name = name.join('/');\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../../../node_modules/almond/almond\", function(){});\n\n","'use strict';\ndefine('config', [],function() {\n  requirejs.config({\n    baseUrl: '/js/lib',\n    paths: {\n      app: '../app',\n      templates: '../templates',\n      components: '../components'\n    }\n  });\n});\n\ndefine(\"../config\", function(){});\n\n","/*!\n * EventEmitter v4.2.11 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve\n */\n\n;(function () {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var exports = this;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n                i = listeners.length;\n\n                while (i--) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define('eventEmitter/EventEmitter',[],function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}.call(this));\n\n","(function(global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define('lagden-utils/dist/index',['exports'], factory) :\n\t\t\t(factory((global.lagdenUtils = global.lagdenUtils || {})));\n}(this, function(exports) {\n\t'use strict';\n\n\tfunction detect(lista) {\n\t\tvar i = 0;\n\t\tfor (i = lista.length - 1; i >= 0; i--) {\n\t\t\tif (document.documentElement.style[lista[i][0]] !== undefined) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn lista[i];\n\t}\n\n\tfunction animationEvent() {\n\t\tvar VENDOR = [['animation', 'animationstart', 'animationiteration', 'animationend'], ['MozAnimation', 'mozAnimationStart', 'mozAnimationIteration', 'mozAnimationEnd'], ['OAnimation', 'oAnimationStart', 'oAnimationIteration', 'oAnimationEnd'], ['webkitAnimation', 'webkitAnimationStart', 'webkitAnimationIteration', 'webkitAnimationEnd']];\n\t\treturn detect(VENDOR);\n\t}\n\n\tfunction escapeHtml(html) {\n\t\treturn html && String(html).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t}\n\n\tfunction extend(a, b) {\n\t\tObject.keys(b).forEach(function(prop) {\n\t\t\ta[prop] = b[prop];\n\t\t});\n\t\treturn a;\n\t}\n\n\tfunction isElement(obj) {\n\t\treturn obj instanceof HTMLElement || obj instanceof SVGElement;\n\t}\n\n\tfunction qS(el) {\n\t\treturn document.querySelector(el);\n\t}\n\n\tfunction textNode(node, txt) {\n\t\tvar stringHTML = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n\t\tif (stringHTML) {\n\t\t\tnode.insertAdjacentHTML('afterbegin', txt);\n\t\t} else {\n\t\t\tnode.appendChild(document.createTextNode(txt));\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction transitionEvent() {\n\t\tvar VENDOR = [['transition', 'transitionend'], ['MozTransition', 'mozTransitionEnd'], ['OTransition', 'oTransitionEnd'], ['webkitTransition', 'webkitTransitionEnd']];\n\t\treturn detect(VENDOR)[1];\n\t}\n\n\texports.animationEvent = animationEvent;\n\texports.extend = extend;\n\texports.escapeHtml = escapeHtml;\n\texports.isElement = isElement;\n\texports.qS = qS;\n\texports.textNode = textNode;\n\texports.transitionEvent = transitionEvent;\n\n\tObject.defineProperty(exports, '__esModule', {\n\t\tvalue: true\n\t});\n\n}));\n","'use strict';\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\n(function(window, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('components/modal',['eventEmitter/EventEmitter', 'lagden-utils/dist/index'], function(EventEmitter, lagdenUtils) {\n      return factory(window, EventEmitter, lagdenUtils);\n    });\n  } else {\n    window.ModalLayout = factory(window, window.EventEmitter, window.lagdenUtils);\n  }\n})(window, function(window, EventEmitter, lagdenUtils) {\n  var GUID, Modal, doc, docBody, head;\n  console.log(lagdenUtils);\n  GUID = 0;\n  doc = window.document;\n  head = doc.head || doc.getElementsByTagName('head')[0];\n  docBody = doc.body || doc.querySelector('body');\n  return Modal = (function(superClass) {\n    extend(Modal, superClass);\n\n    function Modal(content, opts) {\n      var contentIsStr, r, render;\n      if (opts == null) {\n        opts = {};\n      }\n      this.id = ++GUID;\n      this.opts = {\n        esc: true,\n        beforeOpen: null,\n        prefix: 'modalLayout',\n        escape: false\n      };\n      lagdenUtils.extend(this.opts, opts);\n      this.opts.box = \"\" + this.opts.prefix;\n      this.content = content;\n      if (lagdenUtils.isElement(this.content)) {\n        contentIsStr = false;\n      } else if (typeof this.content === 'string' && this.content !== '') {\n        contentIsStr = true;\n        if (this.opts.escape) {\n          this.content = lagdenUtils.escapeHtml(this.content);\n        }\n      } else {\n        throw 'content must be a HTMLElement or string';\n      }\n      r = {\n        id: this.id,\n        box: this.opts.box,\n        content: contentIsStr ? this.content : ''\n      };\n      render = this.template().replace(/\\{(.*?)\\}/g, function(a, b) {\n        return r[b];\n      });\n      docBody.insertAdjacentHTML('beforeend', render);\n      this.box = doc.querySelector(\"#modalLayoutBox\" + this.id);\n      if (contentIsStr === false) {\n        this.box.appendChild(this.content);\n      }\n      this.keyCodes = {\n        esc: 27\n      };\n      if (this.opts.esc === true) {\n        this.box.addEventListener('keyup', this, false);\n      }\n      this.modalOpen = this.opts.prefix + \"-\" + this.id + \"--open\";\n      this._style();\n    }\n\n    Modal.prototype._style = function() {\n      var css;\n      css = \".\" + this.modalOpen + \"{overflow: hidden;}\";\n      this.styl = doc.createElement('style');\n      this.styl.type = 'text/css';\n      if (this.styl.styleSheet) {\n        this.styl.styleSheet.cssText = css;\n      } else {\n        this.styl.appendChild(doc.createTextNode(css));\n      }\n      head.appendChild(this.styl);\n    };\n\n    Modal.prototype._toogle = function(m) {\n      docBody.classList[m](this.modalOpen);\n      this.box.classList[m](this.opts.box + \"--open\");\n    };\n\n    Modal.prototype.template = function() {\n      return ['<div id=\"modalLayoutBox{id}\" tabindex=\"0\" class=\"{box}\">', '{content}', '</div>'].join('');\n    };\n\n    Modal.prototype.onKeyUp = function(event) {\n      if (event.keyCode === this.keyCodes.esc) {\n        this.close();\n      }\n    };\n\n    Modal.prototype.isOpen = function() {\n      return docBody.classList.contains(this.modalOpen);\n    };\n\n    Modal.prototype.open = function() {\n      if (this.isOpen() === false) {\n        if (typeof this.opts.beforeOpen === 'function') {\n          this.opts.beforeOpen(this, this.box);\n        }\n        this._toogle('add');\n        this.box.focus();\n        this.emitEvent('open', [this]);\n      }\n    };\n\n    Modal.prototype.close = function() {\n      if (this.isOpen() === true) {\n        this._toogle('remove');\n        this.emitEvent('close', [this]);\n      }\n    };\n\n    Modal.prototype.destroy = function() {\n      head.removeChild(this.styl);\n      if (this.opts.esc === true) {\n        this.box.removeEventListener('keyup', this, false);\n      }\n      docBody.removeChild(this.box);\n      this.emitEvent('destroy');\n    };\n\n    Modal.prototype.handleEvent = function(event) {\n      switch (event.type) {\n        case 'keyup':\n          this.onKeyUp(event);\n      }\n    };\n\n    return Modal;\n\n  })(EventEmitter);\n});\n\n","'use strict';\ndefine('app/core',['components/modal'], function(Modal) {\n  var btnDestroy, btnOpen, closeModal, destroyModal, modal, modalContent, openModal, qS;\n  qS = document.querySelector.bind(document);\n  btnOpen = qS('#btnModalOpen');\n  btnDestroy = qS('#btnModalDestroy');\n  modalContent = qS('#modalContent');\n  modal = new Modal(modalContent);\n  modal.on('open', function(instance) {\n    console.log('modal opened', instance);\n  });\n  modal.on('close', function() {\n    console.log('modal closed');\n  });\n  modal.on('destroy', function() {\n    console.log('modal destroyed');\n  });\n  openModal = function() {\n    modal.open();\n  };\n  closeModal = function() {\n    modal.close();\n  };\n  destroyModal = function() {\n    modalContent.removeEventListener('click', closeModal);\n    btnOpen.removeEventListener('click', openModal);\n    btnDestroy.removeEventListener('click', destroyModal);\n    modal.destroy();\n  };\n  modalContent.addEventListener('click', closeModal);\n  btnOpen.addEventListener('click', openModal);\n  btnDestroy.addEventListener('click', destroyModal);\n});\n\n","'use strict';\nrequire(['./config'], function() {\n  require(['app/core']);\n});\n\ndefine(\"../main\", function(){});\n\n"]}